[{"content":"  搭建过程主要参考（过程大体一致，添加了一些细节和我遇到的问题）：\n RSS | RSSHub 搭配 Miniflux，实现订阅自由 Miniflux | 利用Docker-compose搭建RSS阅读器    该文适合人群：想用自定义的域名来访问Miniflux。\n  1. 安装docker 和docker-compose 我使用的VPS系统是Ubuntu，就根据官方的Ubuntu安装文档 装的docker。装好docker之后，在VPS中命令行中运行以下语句，即可安装docker-compose：\napt install docker-compose 2. 通过docker-compose安装Miniflux （1）创建并进入你想安装Miniflux的文件夹：\nmkdir ~/miniflux # 在根目录创建名为miniflux的文件夹 cd ~/miniflux # 进入miniflux文件夹 （2）创建docker-compose.yml文件：\nnano docker-compose.yml # 使用nano编辑器创建，会自动打开文件以写入内容 （3）在文件中写入以下内容并保存*：\nversion: \u0026#39;3.4\u0026#39; services: miniflux: image: miniflux/miniflux:latest ports: - \u0026#34;127.0.0.1:8080:8080\u0026#34; #调整一：增加localhost ip 并改port为8080 depends_on: - db environment: - DATABASE_URL=postgres://miniflux:secret@db/miniflux?sslmode=disable - RUN_MIGRATIONS=1 - CREATE_ADMIN=1 - ADMIN_USERNAME=admin # 登录Miniflux的用户名，可自定义 - ADMIN_PASSWORD=password # 登录Miniflux的密码，可自定义，至少6位 - \u0026#34;BASE_URL=https://enter.your.url\u0026#34; # 调整二：输入想用来访问Miniflux的域名 healthcheck: test: [\u0026#34;CMD\u0026#34;, \u0026#34;/usr/bin/miniflux\u0026#34;, \u0026#34;-healthcheck\u0026#34;, \u0026#34;auto\u0026#34;] db: image: postgres:latest environment: - POSTGRES_USER=miniflux - POSTGRES_PASSWORD=secret volumes: - miniflux-db:/var/lib/postgresql/data healthcheck: test: [\u0026#34;CMD\u0026#34;, \u0026#34;pg_isready\u0026#34;, \u0026#34;-U\u0026#34;, \u0026#34;miniflux\u0026#34;] interval: 10s start_period: 30s volumes: miniflux-db: 该docker-compose.yml 文档内容基于Miniflux官方文档 ，并在细节上进行了调整。调整有两处：一是将port改为127.0.0.1:8080:8080，主要目的是错开常用port 80，并调整localhost为127.0.0.1来跟nginx的设置一致（如不调整，miniflux将使用0.0.0.0，无法顺利运行nginx）；二是在miniflux的environment中加入新的configuration BASE_URL，请将内容换为你想用来访问Miniflux的域名（不确定这一步是否必要，我参考的博客都没有这一步）。\n*如何用nano保存文件：可以使用ctrl+X，在退出编辑时，选择Y来保存所有更改，再敲一次回车便可以回到命令行。\n（4）运行以下代码进行安装：\ndocker-compose up -d 在浏览器中访问服务器ip:端口号（如http://123.45.67.890:8080），如显示登录界面，即代表安装成功啦。\n3. 使用Nginx进行反向代理 我的理解里，使用Nginx进行反向代理主要是为了让一个服务器ip可以使用多个不同网址，即通过Nginx，使用不同域名可以获取服务器上不同的服务。\n（1）在DNS服务商添加一条A记录，将自定义域名指向服务器的ip地址。\n（2）服务器命令行中安装nginx：\napt install nginx -y （3）创建miniflux.conf文件：\nnano /etc/nginx/conf.d/miniflux.conf （4）在文件中写入以下内容并保存：\nserver { listen 80; server_name enter.your.url; location / { proxy_pass http://127.0.0.1:8080; #8080改为miniflux对外开放的端口，默认为8080 proxy_redirect off; proxy_set_header Host $host; proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_set_header X-Forwarded-Proto $scheme; } } 请将server_name的内容改为想要用来访问Miniflux的域名。\n（5）测试Nginx配置文件是否正确：\nnginx -t 如显示以下内容，即表示没问题：\nnginx: the configuration file /etc/nginx/nginx.conf syntax is ok nginx: configuration file /etc/nginx/nginx.conf test is successful （6）没有错误时，运行：\nnginx -s reload systemctl start nginx systemctl enable nginx （7）安装certbot（根据官方文档 ）:\nsudo apt install certbot apt-get install python3-certbot-nginx （8）运行以下代码，并根据步骤获取SSL证书：\ncertbot --nginx 注意是两个\u0026quot;-\u0026quot;\n现在就可以在浏览器通过设定的域名来访问Miniflux啦！ 4. 其他问题 （1）使用certbot（\u0026ldquo;Let\u0026rsquo;s Encrypt\u0026quot;服务）获取SSL证书时有请求上限，每个账号的每个域名每小时只有5次请求失败次数。假如失败次数过多，就只能等下个小时了，详情见官方说明 。\n（2）docker-compose.yml 文件对缩紧非常敏感，如遇到yaml.parser.ParserError，可以将文件里的内容放到这个网站 去看看自己的空格是不是哪里有问题。\n5. 其他资源 （1） Miniflux官方文档 ，主要讲如何配置、设置反向代理和部署到一些网站.\n","permalink":"https://qilinz.github.io/posts/miniflux-with-nginx/","summary":"搭建过程主要参考（过程大体一致，添加了一些细节和我遇到的问题）：\n RSS | RSSHub 搭配 Miniflux，实现订阅自由 Miniflux | 利用Docker-compose搭建RSS阅读器    该文适合人群：想用自定义的域名来访问Miniflux。\n  1. 安装docker 和docker-compose 我使用的VPS系统是Ubuntu，就根据官方的Ubuntu安装文档 装的docker。装好docker之后，在VPS中命令行中运行以下语句，即可安装docker-compose：\napt install docker-compose 2. 通过docker-compose安装Miniflux （1）创建并进入你想安装Miniflux的文件夹：\nmkdir ~/miniflux # 在根目录创建名为miniflux的文件夹 cd ~/miniflux # 进入miniflux文件夹 （2）创建docker-compose.yml文件：\nnano docker-compose.yml # 使用nano编辑器创建，会自动打开文件以写入内容 （3）在文件中写入以下内容并保存*：\nversion: \u0026#39;3.4\u0026#39; services: miniflux: image: miniflux/miniflux:latest ports: - \u0026#34;127.0.0.1:8080:8080\u0026#34; #调整一：增加localhost ip 并改port为8080 depends_on: - db environment: - DATABASE_URL=postgres://miniflux:secret@db/miniflux?sslmode=disable - RUN_MIGRATIONS=1 - CREATE_ADMIN=1 - ADMIN_USERNAME=admin # 登录Miniflux的用户名，可自定义 - ADMIN_PASSWORD=password # 登录Miniflux的密码，可自定义，至少6位 - \u0026#34;BASE_URL=https://enter.","title":"使用Docker搭建Miniflux并使用Nginx进行反向代理"},{"content":"在27岁这一年，我终于正式开始工作了。经历过gap year、休学，换过无数方向的我终于开始工作了。\n0 背景介绍 我一直都是经济学背景，在法国读书，读硕士的时候为了好找工作，自学了数据分析。课程结束后，机缘巧合获得了一份产品经理的实习。放弃了转正之后就开始了漫长的找工作过程。在找工作的前三个月，我找的都是product manager或者product analyst。我当时的想法是因为我有这个实习背景，所以应该能好找一些，等拿到多年居留卡之后再转到程序员的职位。大概投了一百份简历，实习和正职都投，面试不断但都没活过一面。我感觉是因为欧洲对pm的语言、学历背景、工作经验的要求都很高，就算是junior的pm基本要求也是2年的全职经验，我一点优势都没有。\n我一直都对写代码挺感兴趣的，本科的时候就学过一些，但是断断续续都放弃了。有一天突然就在想，既然我早晚都相当程序员，那为什么不是现在？\n当时居留还有10个月。于是我准备的方案就是，开始学编程，努力找工作，找不到工作就换自由职业者自己解决居留问题。\n1 学习阶段 2021年11月，我就开始了高强度学习。每天学6小时，多的时候也会到8-10小时，提不起兴致的时候也会休息两天。因为我本身知识上欠缺比较多，主要目标还是学知识、做项目，刷题目标是会做leetcode easy。具体来说：\n 2021.11 - 2021.12: Udemy 100 Day of Code: The Complete Python Pro Bootcamp by Angela Yu 2022.1: Jetbrains Python Code track （安利嘟，记录嘟） 2022.2: Leetcode Top Interview questions Easy （记录嘟） 2022.3: Full Stack open （JavaScript-based web development，只学了前三章）  一开始的学习都集中在Python，后面投简历迟迟收不到回应就开始学js，为当一个前端自由职业者做准备。\n2 面试阶段 2022年1月，我开始零零碎碎投简历，一直到2月下旬才开始密集投简历。因为我本身不会法语，所以只能投英语的岗位，选择没有特别多，但也比之前投pm的多了不少。我投的方向是：Python developer，Data Engineer 和不要求编程语言的Junior Software Engineer（前端、后端、全栈都投了）。地区的话，主投法国，零散投了一些德国和英国。\n第一波密集投简历等了3周才开始有回应，收到了一个data engineer的online test，一个python 爬虫岗的电面，还拿到了一个后端实习的内推。Online test挂了，爬虫岗拿了offer，实习也拿到了offer但因为拿到了正职的offer就拒绝了。\n爬虫岗的面试要做take-home test，写一个简单的爬虫。我写了很多，除了爬数据之外的代码，我还写了输入验证、各种不同的error handling和数据的简单处理。在第二轮面试给feedback的时候，面试官讲：“我从你的代码看出来你之前是个pm了。” 我好开心，我好喜欢这种用代码说话的感觉。过去的经历在不同方面帮助了我，不管是我自学的数据分析还是产品经理实习，用心做的事情都在这个机会上给了我回报。\n相对于别的职业，程序员在这个过程中真的很简单。\n一个是简历，我看过我的法国朋友（硕士，有一段实习经历）的简历，只是单纯地罗列，没使用任何简历写作技巧，所有需要cover letter的工作全都不投，但还是面试不断；一个是面试，一切都非常简单，一直到最后一轮，我没有被问过任何一个behavioral question。而在我之前投pm的时候，第一轮就会换各种花样布满整个面试。\n我总是在想，是程序员这个职业拥有太多特权，还是其他职业被剥削太多。答案大概是两者都有。\n3 其他准备 为了让自己能够顺利留在法国当程序员，我也准备了很多备选方案。\n 签证：找了律师，如果没找到工作就转自由职业。 学校：申请了42 Paris（巴黎的编程学校），过了游戏测试和线下meet。没找到工作就去上学。 实习：申请了Outreachy，也过了初选。  4 转码感受 我一直都以为零基础转码是我这样的，看得多了才知道，原来大家口中的零基础转码指的是去读CS master。确实有种被欺骗的感觉。在我学习的过程中，我是真的很喜欢写python，而且很明显对后端的兴趣比前端浓厚很多。但市场上对后端程序员的学历要求更高，而我是个社科背景。整个转码过程中，真的很容易觉得无助，因为好像放眼望去，只有我一个人没有CS学历，没有上过线下bootcamp，还要被签证限制。\n之前看到长毛象有人说，我当时选的这个吃力不讨好的方向（python后端）是有空间的，我当时感到非常安慰。但投工作的过程中也发现，其实可能不是这样的。我最低估的阻力就是，我没有CS背景的学历。虽然我最初就知道这是个障碍，但并没有如此深刻地明白这个阻力到底有多大。而我也可能是那个找到工作的幸运儿，看到的阻力也可能只是冰山一角。\n本来不该是这样的。学过计算机的人都应该明白，互联网上有你想要的一切，市面上80%的岗位都能靠自学获得需要的知识，更别提这其中很多岗位都会提供培训，前三个月适应，六个月才正式写核心业务。就算是这样的一个职业，都被学历卡得要命。\n为什么？为什么要是这个样子，我常在各个事情上这样想。虽然社会就是这样的，可是为什么？为什么要给人上这么多枷锁，为什么又主动伸出手把自己铐上？为什么？\n5 结语 说幸运我确实很幸运，很幸运地喜欢写代码，很幸运地投了四十份简历就找到了工作。\n可是，\n我本科毕业实习的那年呢？做了一整年很讨厌的工作，再也不想进入金融行业。\n我休学的一年呢？在啤酒、游戏、药物中度过。\n我第二个硕士毕业的那年呢？在中资被摧残，直到现在还ptsd。\n但我也知道自己足够privileged，有钱读两个硕士，有钱休学生活，有钱雇律师转自由职业者身份，有钱到本科毕业六年才开始工作。虽然我在身边朋友里算家境差的，但我也已经有了足够多的自由来做出这些选择。我总是为拥有这些而痛苦，我总觉得我不值得。\n我一直很羡慕一直很明确自己要什么的人，能看到她们很早就走上了“正轨”。而我就是那个不断挣扎的人，我从2014年开始挣扎自己到底想要什么样的人生，而到2022年的今天，我也深知这只是个开始而已。但我相信，我准备好开始这一切了。\n","permalink":"https://qilinz.github.io/posts/become-a-developer/","summary":"在27岁这一年，我终于正式开始工作了。经历过gap year、休学，换过无数方向的我终于开始工作了。\n0 背景介绍 我一直都是经济学背景，在法国读书，读硕士的时候为了好找工作，自学了数据分析。课程结束后，机缘巧合获得了一份产品经理的实习。放弃了转正之后就开始了漫长的找工作过程。在找工作的前三个月，我找的都是product manager或者product analyst。我当时的想法是因为我有这个实习背景，所以应该能好找一些，等拿到多年居留卡之后再转到程序员的职位。大概投了一百份简历，实习和正职都投，面试不断但都没活过一面。我感觉是因为欧洲对pm的语言、学历背景、工作经验的要求都很高，就算是junior的pm基本要求也是2年的全职经验，我一点优势都没有。\n我一直都对写代码挺感兴趣的，本科的时候就学过一些，但是断断续续都放弃了。有一天突然就在想，既然我早晚都相当程序员，那为什么不是现在？\n当时居留还有10个月。于是我准备的方案就是，开始学编程，努力找工作，找不到工作就换自由职业者自己解决居留问题。\n1 学习阶段 2021年11月，我就开始了高强度学习。每天学6小时，多的时候也会到8-10小时，提不起兴致的时候也会休息两天。因为我本身知识上欠缺比较多，主要目标还是学知识、做项目，刷题目标是会做leetcode easy。具体来说：\n 2021.11 - 2021.12: Udemy 100 Day of Code: The Complete Python Pro Bootcamp by Angela Yu 2022.1: Jetbrains Python Code track （安利嘟，记录嘟） 2022.2: Leetcode Top Interview questions Easy （记录嘟） 2022.3: Full Stack open （JavaScript-based web development，只学了前三章）  一开始的学习都集中在Python，后面投简历迟迟收不到回应就开始学js，为当一个前端自由职业者做准备。\n2 面试阶段 2022年1月，我开始零零碎碎投简历，一直到2月下旬才开始密集投简历。因为我本身不会法语，所以只能投英语的岗位，选择没有特别多，但也比之前投pm的多了不少。我投的方向是：Python developer，Data Engineer 和不要求编程语言的Junior Software Engineer（前端、后端、全栈都投了）。地区的话，主投法国，零散投了一些德国和英国。\n第一波密集投简历等了3周才开始有回应，收到了一个data engineer的online test，一个python 爬虫岗的电面，还拿到了一个后端实习的内推。Online test挂了，爬虫岗拿了offer，实习也拿到了offer但因为拿到了正职的offer就拒绝了。\n爬虫岗的面试要做take-home test，写一个简单的爬虫。我写了很多，除了爬数据之外的代码，我还写了输入验证、各种不同的error handling和数据的简单处理。在第二轮面试给feedback的时候，面试官讲：“我从你的代码看出来你之前是个pm了。” 我好开心，我好喜欢这种用代码说话的感觉。过去的经历在不同方面帮助了我，不管是我自学的数据分析还是产品经理实习，用心做的事情都在这个机会上给了我回报。\n相对于别的职业，程序员在这个过程中真的很简单。","title":"转码心路历程记录"},{"content":"你好\n","permalink":"https://qilinz.github.io/posts/hello-world/","summary":"你好","title":"Hello World"},{"content":"我一直都是个\u0026quot;流动人口\u0026quot;，从小学到初中换了三个城市。一直在换不同的房子住，也没有太多家的概念，没有任何一个平方是属于我的，不知道这次可不可以在法国安家。开始寻找自己之后，就先给自己一个家吧。\n做过分析师、产品经理的实习，现在要开始以程序员的身份工作了。\n喜欢游戏，有一只小狗，想住在海边。\n不擅长一对一即时聊天，现在藏在了长毛象里，欢迎来找我玩。\n","permalink":"https://qilinz.github.io/about/","summary":"我自己","title":"我是栗🌰"}]